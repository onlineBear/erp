<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zmqy.erp.mapper.mis.pc.module.rpt.ReportDesignModuleMapper">

    <select id="getReport" resultType="java.util.Map">
        select rd.id,rd.reportName,cl.comName as
        publishStatus,rd.category,rd.reportType,rd.chartType,
        rd.reportState,u.userName+'['+u.userNo+']' as createUser,rd.createTime,rd.createStore,rd.lastUpdateTime
        from tReportDesign rd
        join tCommon c on c.comNo = rd.publishStatus
        join tCommonLang cl on c.id = cl.comId and cl.langId = #{paramsMap.loginLangId}
        left join tUser u on rd.createUserId = u.id
        <where>
            <if test="paramsMap.reportName != null and paramsMap.reportName != ''">
                rd.reportName like #{paramsMap.reportName}
            </if>
            <if test="paramsMap.publishStatus != null and paramsMap.publishStatus != ''">
                and rd.publishStatus = #{paramsMap.publishStatus}
            </if>
            <if test="null != list and list.size > 0">
                and
                <foreach collection="list" item="reportType" open="(" separator="or" close=")">
                    rd.reportType like #{reportType}
                </foreach>
            </if>
            <if test="paramsMap.parentReport != null and paramsMap.parentReport != ''">
                and exists(
                select 1 from tReportRelation rr join tReportDesign rdd on rdd.id = rr.reportId where rr.childReportId =
                rd.id and rdd.reportName in (${paramsMap.parentReport})
                )
            </if>
            <if test="paramsMap.createUser != null and paramsMap.createUser != ''">
                and (u.userName like #{paramsMap.createUser} or u.userNo like #{paramsMap.createUser})
            </if>
            <if test="paramsMap.lastUpdateTime != null and paramsMap.lastUpdateTime != ''">
                and rd.lastUpdateTime >= #{paramsMap.lastUpdateTime}
            </if>
            <if test="paramsMap.reportState != null and paramsMap.reportState != ''">
                and rd.reportState like #{paramsMap.reportState}
            </if>

        </where>

        order by rd.lastUpdateTime desc


    </select>

    <select id="getReportList" resultType="java.util.Map">
        select id,reportName,reportType from tReportDesign
        <where>
            <if test="reportName != null and reportName">
                reportName like #{reportName}
            </if>

        </where>
        order by lastUpdateTime desc
    </select>
    <select id="getParentReportAll" parameterType="java.lang.String" resultType="java.util.Map">
        select rd.reportName from tReportRelation rr join tReportDesign rd on rr.reportId = rd.id
        where rr.childReportId = #{id}
    </select>
    <select id="getMenuList" resultType="java.util.Map">
        select menuId = m.id, m.menuNo, m.parentMenuId,
        m.areCatalog, m.menuLevel, m.seq,
        m.areHqDisplay, m.areShopDisplay, m.areDcDisplay,
        menuName = concat(ml.menuName,' ('+rd.reportName+')'), ml.menuDesc
        from tMenu as m
        left join tMenuLang as ml on m.id=ml.menuId and ml.langId='1073471954843422721'
        left join tReportDesign rd on m.reportId = rd.id
        order by m.parentMenuId, m.id
    </select>
    <update id="unbundMenu" parameterType="java.lang.String">
        update tMenu set reportId = '' where reportId = #{reportId}
    </update>
    <update id="reportBindMenu" parameterType="java.lang.String">
        update tMenu set reportId = #{reportId} where id = #{menuId}
    </update>
    <select id="getReportById" resultType="java.util.Map">
        select id,publishStatus,reportType,reportName from tReportDesign where id = #{reportId}
    </select>
    <select id="getReportHistoryList" parameterType="java.lang.String" resultType="java.util.Map">
        select id,version,lastUpdateTime from tReportDesignHistory where reportId = #{reportId} order by version desc
    </select>
    <select id="getReportListByName" resultType="java.util.Map">
        select id,reportName,reportState,sql from tReportDesign
        <where>
            <if test="reportName != null and reportName != ''">
                reportName like #{reportName}
            </if>
            <if test="parent != null and parent != ''">
                and reportType not like '%组合子报表%'
                and reportType not like '%父报表%'
            </if>
            <if test="combinParent != null and combinParent != ''">
                and (CHARINDEX('组',reportType) !=0 or CHARINDEX('子',reportType) = 0 )

            </if>
        </where>
    </select>
    <delete id="delReportRelation" parameterType="java.lang.String">
        delete from tReportRelation where  reportId = #{reportId}
    </delete>
    <select id="getReportRelation" resultType="java.util.Map">
        select * from tReportRelation where reportId = #{reportId}
    </select>
    <select id="getRelationByChild" resultType="int">
        select count(1) from tReportRelation where childReportId = #{childId} and relationType = #{type}
    </select>
    <select id="getRelationByChildId" resultType="java.util.Map">
        select * from tReportRelation where childReportId = #{childId} and relationType = #{type}
    </select>
</mapper>
