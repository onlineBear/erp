<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zmqy.erp.mapper.mis.pc.module.base.vendor.VendorModuleMapper">
    <select id="getVendorList" parameterType="map" resultType="map">
        select v.id as vendorId, v.vendorNo, vl.vendorName,
        v.legalPerson, v.salesManager, v.tel,
        v.firstDay,v.registeredCapital,v.createTime,v.areOnlineSettle,registeredCapitalSum = (v.registeredCapital+v.firstDay)
        from tVendor as v
        left join tVendorLang as vl on v.id=vl.vendorId and vl.langId=#{langId}
        <where>
            <if test="vendorNo != null and vendorNo != ''">
                v.vendorNo like #{vendorNo}
            </if>
            <if test="vendorName != null and vendorName != ''">
                and vl.vendorName like #{vendorName}
            </if>
            <if test="filterCondition != null and filterCondition != ''">
                and ${filterCondition}
            </if>
        </where>
        order by v.createTime desc offset #{startRow} row fetch next #{pageSize} rows only
    </select>

    <select id="export" parameterType="map" resultType="map">
        select ROW_NUMBER() over(ORDER BY v.createTime desc) as _item,
        v.id as vendorId, v.vendorNo, vl.vendorName,
        v.legalPerson, v.salesManager, v.tel,
        v.firstDay,v.registeredCapital,v.createTime,v.areOnlineSettle,registeredCapitalSum = (v.registeredCapital+v.firstDay)
        from tVendor as v
        left join tVendorLang as vl on v.id=vl.vendorId and vl.langId=#{langId}
        <where>
            <if test="vendorNo != null and vendorNo != ''">
                v.vendorNo like #{vendorNo}
            </if>
            <if test="vendorName != null and vendorName != ''">
                and vl.vendorName like #{vendorName}
            </if>
            <if test="filterCondition != null and filterCondition != ''">
                and ${filterCondition}
            </if>
        </where>
        order by v.createTime desc offset #{startRow} row fetch next #{pageSize} rows only
    </select>

    <select id="getVendorListTotal" parameterType="map" resultType="Long">
        select total = count(1)
        from tVendor as v
        left join tVendorLang as vl on v.id=vl.vendorId and vl.langId=#{langId}
        <where>
            <if test="vendorNo != null and vendorNo != ''">
                v.vendorNo like #{vendorNo}
            </if>
            <if test="vendorName != null and vendorName != ''">
                and vl.vendorName like #{vendorName}
            </if>
            <if test="filterCondition != null and filterCondition != ''">
                and ${filterCondition}
            </if>
        </where>
    </select>

    <select id="getVendorListSum" parameterType="map" resultType="map">
        select vendorNo = max(a.vendorNo),firstDay = sum(a.firstDay),
        registeredCapital = sum(a.registeredCapital),'合计' as _item
        from(
        select v.id as vendorId, v.vendorNo, vl.vendorName,
        v.legalPerson, v.salesManager, v.tel,
        v.firstDay,v.registeredCapital,v.createTime,v.areOnlineSettle
        from tVendor as v
        left join tVendorLang as vl on v.id=vl.vendorId and vl.langId=#{langId}
        <where>
            <if test="vendorNo != null and vendorNo != ''">
                v.vendorNo like #{vendorNo}
            </if>
            <if test="vendorName != null and vendorName != ''">
                and vl.vendorName like #{vendorName}
            </if>
            <if test="filterCondition != null and filterCondition != ''">
                and ${filterCondition}
            </if>
        </where>
        order by v.createTime desc offset #{startRow} row fetch next #{pageSize} rows only
        )as a
    </select>

    <select id="getById" parameterType="map" resultType="map">
        select v.id as vendorId, vendorNo, legalPerson, salesManager,
        tel, nationNo, provinceNo, cityNo,
        address, postalcode, email, vendorTypeNo,
        vendorNatureNo, taxTypeNo, socialCreditCode, subjectTypeNo,
        foundDate, issueBankNo, issueBankAccount, zfbAccount,
        wechatAccount, areInvoiceNotInOrder, areOnlineSettle,
        hasUpload2B2B, interfaceNo, accountSubject, settleStoreId,
        enterDate, exeuntDate, payModeNo, registeredCapital, firstDay,
        contactPerson1, contractEmail1, contractMobile1, contractQQ1, contractWechat1,
        contactPerson2, contractEmail2, contractMobile2, contractQQ2, contractWechat2,
        contactPerson3, contractEmail3, contractMobile3, contractQQ3, contractWechat3,
        memo1, memo2, memo3, memo4, memo5,
        v.createUserId, v.createTime, v.lastUpdateTime,
        vl.vendorName, vl.vendorShortName,
        curentLevel = isnull(bill.curentLevel, 0)
        from tVendor as v
        left join tVendorLang as vl on v.id=vl.vendorId and vl.langId=#{langId}
        left join tCheckBill as bill on v.id=bill.billId
        where v.id = #{vendorId}
    </select>

    <select id="getCertifById" parameterType="map" resultType="map">
        select id=vc.id, vc.certifTypeNo, vc.certifNo, vc.expirationDate, vc.picUrl
        from tVendorCertif as vc
        where vc.vendorId = #{vendorId}
        order by vc.certifTypeNo, vc.certifNo
    </select>
</mapper>
