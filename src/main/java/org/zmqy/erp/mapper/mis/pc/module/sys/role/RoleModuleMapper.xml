<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zmqy.erp.mapper.mis.pc.module.sys.role.RoleModuleMapper">
    <select id="getRoleList" parameterType="map" resultType="map">
        select roleId = r.id, r.roleNo, rl.roleName, rl.roleDesc
        from tRole as r
        left join tRoleLang as rl on r.id=rl.roleId and rl.langId=#{langId}
        order by r.roleNo
    </select>

    <select id="getUserByRole" parameterType="map" resultType="map">
        select  userId=u.id, u.userNo, u.userName,
                selected = convert(bit, case when ru.id is null then 0 else 1 end)
        from tUser as u
        left join tRoleUser as ru on u.id=ru.userId and ru.roleId=#{roleId}
        order by u.userNo
    </select>

    <select id="getResByRole" parameterType="map" resultType="map">
        declare @roleId nvarchar(20), @langId nvarchar(20)

        --select  @roleId = '1073764299044311041', @langId = '1073471954843422721'
        select  @roleId = #{roleId}, @langId = #{langId}

        if object_id('tempdb..#tree') is not null
            drop table #tree

        create table #tree
        (
            id nvarchar(19) not null,
            name nvarchar(40) null,
            description nvarchar(200) null,
            parentId nvarchar(20) not null,
            selected nvarchar(10) not null,
            level int not null
        )

        insert into #tree
            (id, name, description, parentId,
             selected, level)
        select  r.id, rl.resName, rl.resDesc, r.menuId,
               selected = convert(nvarchar(10), case when rr.resId is null then 'none' else 'all' end),
                1
        from tResource as r
        left join tRoleResource as rr on r.id=rr.resId and rr.roleId=@roleId
        left join tResourceLang as rl on r.id=rl.resId and rl.langId=@langId

        declare @MaxMenuLevel int, @level int
        --select  @MaxMenuLevel = isnull(max(menuLevel),0) from tMenu

        select  @MaxMenuLevel = 5, @level = 2

        while @MaxMenuLevel >= 1
        begin
            insert into #tree
                (id, name, description, parentId,
                 selected, level)
            select  m.id, ml.menuName, ml.menuDesc, m.parentMenuId,
                    '', @level
            from tMenu as m
            left join tRoleMenu as rm on m.id=rm.menuId and rm.roleId=@roleId
            left join tMenuLang as ml on m.id=ml.menuId and ml.langId=@langId
            where m.menuLevel = @MaxMenuLevel

            -- 全选
            update #tree
            set selected = 'all'
            from #tree as t
            where t.level = @level
              and not exists (select 1 from #tree as child where child.parentId=t.id and child.selected in ('none', 'half'))
              and exists (select 1 from tRoleMenu as rm where rm.menuId=t.id and rm.roleId=@roleId)

            -- 全不选
            update #tree
            set selected = 'none'
            from #tree as t
            where t.level = @level
              and not exists (select 1 from #tree as child where child.parentId=t.id and child.selected in ('none', 'all'))
              and selected = ''

            -- 半选
            update #tree
            set selected = 'half'
            from #tree as t
            where t.level = @level
              and selected = ''

            select @level = @level +1, @MaxMenuLevel = @MaxMenuLevel - 1
        end

        select id, name, description, parentId,
               selected
        from #tree
        order by parentId, id

        if object_id('tempdb..#tree') is not null
            drop table #tree
    </select>

    <select id="getProgramDraByRole" parameterType="map" resultType="map">
        select programDraId = pd.id, pdl.programDraName, selected = convert(bit, case when rpd.id is null then 0 else 1 end)
        from tProgramDra as pd
        left join tProgramDraLang as pdl on pd.id=pdl.programDraId and pdl.langId = #{langId}
        left join tRoleProgramDra as rpd on pd.id=rpd.programDraId and rpd.roleId = #{roleId}
        order by pd.id
    </select>


</mapper>
